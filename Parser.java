 /**
   * file: Parser.java
   * author: Artur Barbosa
   * course: CMPT 435
   * assignment: project 2 parser 
   * due date: 3/6/2018
   * 
   * 
   * This file contains the parcer for project 2.
   *
   */
import java.util.List;
import java.util.Stack;


/**
 * This class implements the parser of the grammar that takes a list of Token
 * objects generated by the Lexer, from input source program, and then validates the program
 * as per grammar.
 *
 */
public class Parser {

	private List<Token> tokens;
	private boolean debug;
	private static int progNum = 1;
	
	private String cst = "";
	private boolean parseError = false;
	private boolean warning = false;
	private int nextTokenIndex;
	Stack<Integer> cstIdentValues = new Stack<Integer>();
	
	public Parser(List<Token> tokens, boolean debug){
		this.tokens = tokens;
		this.debug = debug;
		cst = "";
		parseError = false;
		nextTokenIndex = 0;
	}
	
